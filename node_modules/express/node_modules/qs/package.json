{
  "name": "qs",
  "description": "querystring parser",
  "version": "0.6.6",
  "keywords": [
    "query string",
    "parser",
    "component"
  ],
  "repository": {
    "type": "git",
    "url": "git://github.com/visionmedia/node-querystring.git"
  },
  "license": {
    "type": "MIT",
    "url": "https://github.com/visionmedia/node-querystring/raw/master/LICENSE"
  },
  "devDependencies": {
    "mocha": "*",
    "expect.js": "*"
  },
  "scripts": {
    "test": "make test"
  },
  "author": {
    "name": "TJ Holowaychuk",
    "email": "tj@vision-media.ca",
    "url": "http://tjholowaychuk.com"
  },
  "main": "index",
  "engines": {
    "node": "*"
  },
  "readme": "# node-querystring [![Build Status](https://travis-ci.org/visionmedia/node-querystring.png?branch=master)](https://travis-ci.org/visionmedia/node-querystring)\n\n  query string parser for node and the browser supporting nesting, as it was removed from `0.3.x`, so this library provides the previous and commonly desired behaviour (and twice as fast). Used by [express](http://expressjs.com), [connect](http://senchalabs.github.com/connect) and others.\n\n## Installation\n\n    $ npm install qs\n\n## Examples\n\n```js\nvar qs = require('qs');\n\nqs.parse('user[name][first]=Tobi&user[email]=tobi@learnboost.com');\n// => { user: { name: { first: 'Tobi' }, email: 'tobi@learnboost.com' } }\n\nqs.stringify({ user: { name: 'Tobi', email: 'tobi@learnboost.com' }})\n// => user[name]=Tobi&user[email]=tobi%40learnboost.com\n```\n\n## Testing\n\nInstall dev dependencies:\n\n    $ npm install -d\n\nand execute:\n\n    $ make test\n\nbrowser:\n\n    $ open test/browser/index.html\n",
  "readmeFilename": "Readme.md",
  "bugs": {
    "url": "https://github.com/visionmedia/node-querystring/issues"
  },
  "homepage": "https://github.com/visionmedia/node-querystring",
  "_id": "qs@0.6.6",
  "_shasum": "b5686a300a1781660877002addd550f85c7fb63b",
  "_from": "qs@0.6.6",
  "_resolved": "https://registry.npmjs.org/qs/-/qs-0.6.6.tgz"
}
